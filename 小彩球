<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title>小彩球</title>
		<style>
			*{
				padding: 0px;
				margin: 0px;
			}
			body{
				background-color: black;	
			}
			canvas{
				/*border: 1px solid red;*/
			}
		</style>
	</head>
	<body>
	<canvas></canvas>		
		<script type="text/javascript">
			var mycanvas = document.getElementsByTagName('canvas')[0];
			var ctx = mycanvas.getContext('2d');
			mycanvas.width = document.documentElement.clientWidth;
			mycanvas.height = document.documentElement.clientHeight;
			function Ball(x, y){
				this.x = x;
				this.y = y;
				this.r = 30;
				this.color = "rgba("+ parseInt(Math.random() * 256)+","+ parseInt(Math.random() * 256)+"," +parseInt(Math.random() * 256)+",0.8)";
				this.dx = parseInt(Math.random() * 18) -19;
				this.dy = parseInt(Math.random() * 18) -19;
				ballsArr.push(this);
			}
			Ball.prototype.update = function(){
				this.x += this.dx;
				this.y += this.dy;
				this.r --;
				if(this.r < 0){
					this.godie();
				}
			}
			Ball.prototype.render = function(){
				ctx.beginPath();
				ctx.arc(this.x,this.y,this.r,0,2 * Math.PI,true);
				ctx.closePath();
				ctx.fillStyle = this.color;
				ctx.fill();
			}
			Ball.prototype.godie = function(){
				for(var i = 0; i < ballsArr.length; i++){
					if(ballsArr[i] == this){
						ballsArr.splice(i, 1);
					}
					
				}
			}
			//小球数组
			var ballsArr = [];
			mycanvas.onmousemove = function(event){
				new Ball(event.clientX,event.clientY)
			}
			setInterval(function(){
				ctx.clearRect(0,0,mycanvas.width,mycanvas.height);
				for(var i = 0; i < ballsArr.length; i++){
					ballsArr[i].update();
					ballsArr[i] && ballsArr[i].render();
				}
//				console.log('hgsljk');
			},20)
		</script>
	</body>
</html>
